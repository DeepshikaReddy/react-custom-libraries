{"version":3,"file":"stories-MultiDatePicker-stories.981958a8e7633d3bcc00.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAKA;AAtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuGA","sources":["webpack://fast-react-lib/./src/components/Requirements/DatePicker/MultiDatePicker.jsx"],"sourcesContent":["import React , {useState,useEffect} from \"react\";\nimport './MultiDatePicker.css'\n\n/**\n * \n * @author Deepshika Reddy Annam Gunasekaran\n */\n\n//This component gives a multi-date picker for start and end date.\nconst MultiDatePicker = ({color , format}) => {\n   const [startselectedDate,setstartSelectedDate] =useState();\n   const [endselectedDate,setendSelectedDate] =useState();\n\n   const handlestartDateChange = (e) =>{\n    const startDate = e.target.value\n    if(startDate && (endselectedDate===null ||endselectedDate== undefined)){\n        setstartSelectedDate(startDate);\n    }else{\n        if(startDate > endselectedDate){\n        setstartSelectedDate(null);\n        }else{\n            setstartSelectedDate(startDate);  \n        }\n    }\n   }\n\n   //function to compare start and end dates.\n   const dateCompare = (endDate) => {\n    if(startselectedDate && endDate){\n        const startDateParts = startselectedDate.split(\"-\");\n        const startYear = parseInt(startDateParts[0], 10);\n        const startMonth = parseInt(startDateParts[1], 10) - 1;\n        const startDay = parseInt(startDateParts[2], 10);\n        const startDateObj = new Date(startYear, startMonth, startDay);\n\n        const endDateParts = endDate.split(\"-\");\n        const endYear = parseInt(endDateParts[0], 10);\n        const endMonth = parseInt(endDateParts[1], 10) - 1;\n        const endDay = parseInt(endDateParts[2], 10);\n        const endDateObj = new Date(endYear, endMonth, endDay);\n        if (startDateObj > endDateObj) {\n            return -1;\n          } else if (startDateObj < endDateObj) {\n            return -2;\n          } else {\n            return 1 ;\n          }\n\n    }\n\n   }\n\n   //endselectedDate\n   useEffect(() => {\n    if (endselectedDate === null) {\n        alert(\"Start Date is greater than or equal to End date\")\n    }\n  }, [endselectedDate]);\n\n  //startselectedDate\n  useEffect(() => {\n    if (startselectedDate === null) {\n        alert(\"Start Date is greater than or equal to End date\")\n    }\n  }, [startselectedDate]);\n\n\n  //onchange for enddate\n    const handleendDateChange = (e) =>{\n    const date = e.target.value\n    const result = dateCompare(date)\n    if(result){\n        if(result==-1 || result ==1){ \n            setendSelectedDate(null)\n        }\n        if(result == -2){\n            setendSelectedDate(date);\n          }\n    \n   }\n}\n\n   //custom color change for component\n   const style = {\n    backgroundColor: color,\n   }\n\n   return(\n    <div className=\"container\">\n        <div className=\"left-div\" style={style}>\n        <input\n        className=\"datepicker-input\"\n        type=\"date\"\n        value= {startselectedDate ?startselectedDate : ''}\n        onChange={handlestartDateChange}\n        placeholder={format}\n        />\n    </div>\n    <div className=\"right-div\" style={style}>\n        <input\n        className=\"datepicker-input\"\n        type=\"date\"\n        value= {endselectedDate ? endselectedDate : ''}\n        onChange={handleendDateChange}\n        placeholder={format}\n        />\n    </div>\n    </div>\n    \n   )\n\n}\nexport default MultiDatePicker;"],"names":[],"sourceRoot":""}